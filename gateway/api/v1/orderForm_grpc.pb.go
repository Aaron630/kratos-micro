// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// OrderFormClient is the client API for OrderForm service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type OrderFormClient interface {
	CreateOrderForm(ctx context.Context, in *CreateOrderFormRequest, opts ...grpc.CallOption) (*CreateOrderFormReply, error)
	UpdateOrderForm(ctx context.Context, in *UpdateOrderFormRequest, opts ...grpc.CallOption) (*UpdateOrderFormReply, error)
	DeleteOrderForm(ctx context.Context, in *DeleteOrderFormRequest, opts ...grpc.CallOption) (*DeleteOrderFormReply, error)
	GetOrderForm(ctx context.Context, in *GetOrderFormRequest, opts ...grpc.CallOption) (*GetOrderFormReply, error)
	ListOrderForm(ctx context.Context, in *ListOrderFormRequest, opts ...grpc.CallOption) (*ListOrderFormReply, error)
}

type orderFormClient struct {
	cc grpc.ClientConnInterface
}

func NewOrderFormClient(cc grpc.ClientConnInterface) OrderFormClient {
	return &orderFormClient{cc}
}

func (c *orderFormClient) CreateOrderForm(ctx context.Context, in *CreateOrderFormRequest, opts ...grpc.CallOption) (*CreateOrderFormReply, error) {
	out := new(CreateOrderFormReply)
	err := c.cc.Invoke(ctx, "/api.v1.OrderForm/CreateOrderForm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderFormClient) UpdateOrderForm(ctx context.Context, in *UpdateOrderFormRequest, opts ...grpc.CallOption) (*UpdateOrderFormReply, error) {
	out := new(UpdateOrderFormReply)
	err := c.cc.Invoke(ctx, "/api.v1.OrderForm/UpdateOrderForm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderFormClient) DeleteOrderForm(ctx context.Context, in *DeleteOrderFormRequest, opts ...grpc.CallOption) (*DeleteOrderFormReply, error) {
	out := new(DeleteOrderFormReply)
	err := c.cc.Invoke(ctx, "/api.v1.OrderForm/DeleteOrderForm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderFormClient) GetOrderForm(ctx context.Context, in *GetOrderFormRequest, opts ...grpc.CallOption) (*GetOrderFormReply, error) {
	out := new(GetOrderFormReply)
	err := c.cc.Invoke(ctx, "/api.v1.OrderForm/GetOrderForm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderFormClient) ListOrderForm(ctx context.Context, in *ListOrderFormRequest, opts ...grpc.CallOption) (*ListOrderFormReply, error) {
	out := new(ListOrderFormReply)
	err := c.cc.Invoke(ctx, "/api.v1.OrderForm/ListOrderForm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderFormServer is the server API for OrderForm service.
// All implementations must embed UnimplementedOrderFormServer
// for forward compatibility
type OrderFormServer interface {
	CreateOrderForm(context.Context, *CreateOrderFormRequest) (*CreateOrderFormReply, error)
	UpdateOrderForm(context.Context, *UpdateOrderFormRequest) (*UpdateOrderFormReply, error)
	DeleteOrderForm(context.Context, *DeleteOrderFormRequest) (*DeleteOrderFormReply, error)
	GetOrderForm(context.Context, *GetOrderFormRequest) (*GetOrderFormReply, error)
	ListOrderForm(context.Context, *ListOrderFormRequest) (*ListOrderFormReply, error)
	mustEmbedUnimplementedOrderFormServer()
}

// UnimplementedOrderFormServer must be embedded to have forward compatible implementations.
type UnimplementedOrderFormServer struct {
}

func (UnimplementedOrderFormServer) CreateOrderForm(context.Context, *CreateOrderFormRequest) (*CreateOrderFormReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOrderForm not implemented")
}
func (UnimplementedOrderFormServer) UpdateOrderForm(context.Context, *UpdateOrderFormRequest) (*UpdateOrderFormReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrderForm not implemented")
}
func (UnimplementedOrderFormServer) DeleteOrderForm(context.Context, *DeleteOrderFormRequest) (*DeleteOrderFormReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOrderForm not implemented")
}
func (UnimplementedOrderFormServer) GetOrderForm(context.Context, *GetOrderFormRequest) (*GetOrderFormReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrderForm not implemented")
}
func (UnimplementedOrderFormServer) ListOrderForm(context.Context, *ListOrderFormRequest) (*ListOrderFormReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOrderForm not implemented")
}
func (UnimplementedOrderFormServer) mustEmbedUnimplementedOrderFormServer() {}

// UnsafeOrderFormServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to OrderFormServer will
// result in compilation errors.
type UnsafeOrderFormServer interface {
	mustEmbedUnimplementedOrderFormServer()
}

func RegisterOrderFormServer(s grpc.ServiceRegistrar, srv OrderFormServer) {
	s.RegisterService(&OrderForm_ServiceDesc, srv)
}

func _OrderForm_CreateOrderForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrderFormRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderFormServer).CreateOrderForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.OrderForm/CreateOrderForm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderFormServer).CreateOrderForm(ctx, req.(*CreateOrderFormRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderForm_UpdateOrderForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOrderFormRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderFormServer).UpdateOrderForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.OrderForm/UpdateOrderForm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderFormServer).UpdateOrderForm(ctx, req.(*UpdateOrderFormRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderForm_DeleteOrderForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOrderFormRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderFormServer).DeleteOrderForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.OrderForm/DeleteOrderForm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderFormServer).DeleteOrderForm(ctx, req.(*DeleteOrderFormRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderForm_GetOrderForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrderFormRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderFormServer).GetOrderForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.OrderForm/GetOrderForm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderFormServer).GetOrderForm(ctx, req.(*GetOrderFormRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderForm_ListOrderForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOrderFormRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderFormServer).ListOrderForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.OrderForm/ListOrderForm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderFormServer).ListOrderForm(ctx, req.(*ListOrderFormRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// OrderForm_ServiceDesc is the grpc.ServiceDesc for OrderForm service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var OrderForm_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.v1.OrderForm",
	HandlerType: (*OrderFormServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOrderForm",
			Handler:    _OrderForm_CreateOrderForm_Handler,
		},
		{
			MethodName: "UpdateOrderForm",
			Handler:    _OrderForm_UpdateOrderForm_Handler,
		},
		{
			MethodName: "DeleteOrderForm",
			Handler:    _OrderForm_DeleteOrderForm_Handler,
		},
		{
			MethodName: "GetOrderForm",
			Handler:    _OrderForm_GetOrderForm_Handler,
		},
		{
			MethodName: "ListOrderForm",
			Handler:    _OrderForm_ListOrderForm_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orderForm.proto",
}
